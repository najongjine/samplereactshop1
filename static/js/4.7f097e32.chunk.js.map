{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","Cart.js"],"names":["Table","React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","Cart","state","useSelector","dispatch","useDispatch","reducer","map","item","i","id","name","quan","onClick","type","payload","reducer2"],"mappings":"4JAuCeA,EAnCYC,cAAiB,WAWzCC,GAAQ,IAVTC,EAUS,EAVTA,SACAC,EASS,EATTA,UACAC,EAQS,EARTA,QACAC,EAOS,EAPTA,SACAC,EAMS,EANTA,WACAC,EAKS,EALTA,MACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,QACAC,EAES,EAFTA,WACGC,EACM,gHACHC,EAAoBC,YAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAJ,OAAOG,EAAP,YAA4BH,GAAWD,GAAQ,GAAJ,OAAOI,EAAP,YAA4BJ,GAAQJ,GAAW,GAAJ,OAAOQ,EAAP,YAAoCP,GAAY,GAAJ,OAAOO,EAAP,aAAqCN,GAAc,GAAJ,OAAOM,EAAP,eAAuCL,GAAS,GAAJ,OAAOK,EAAP,WAEvRI,EAAqBC,cAAK,QAAD,YAAC,eAAcN,GAAf,IAC7BR,UAAWW,EACXb,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAH,OAAMN,EAAN,eAMnB,MAJ0B,kBAAfF,IACTQ,EAAkB,GAAH,OAAMA,EAAN,YAAyBR,IAGtBO,cAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,IAId,OAAOA,K,QCiCMI,UAlEf,SAAcT,GACZ,IAAIU,EAAQC,aAAY,SAACD,GAAD,OAAWA,KAC/BE,EAAWC,cACf,OACE,gCACE,eAAC,EAAD,CAAOd,YAAU,EAAjB,UACE,+BACE,mCACA,oDACA,8CACA,iDAEDW,EAAMI,QAAQC,KAAI,SAACC,EAAMC,GACxB,OACE,+BACE,8BAAMA,EAAI,IACV,6BAAKD,EAAKE,KACV,6BAAKF,EAAKG,OACV,6BAAKH,EAAKI,OACV,+BACE,wBACEC,QAAS,WACPT,EAAS,CAAEU,KAAM,2BAAQC,QAAS,CAAEL,GAAIF,EAAKE,OAFjD,eAOA,wBACEG,QAAS,WACPT,EAAS,CAAEU,KAAM,2BAAQC,QAAS,CAAEL,GAAIF,EAAKE,OAFjD,2BAYTR,EAAMc,SACL,sBAAKhC,UAAU,YAAf,UACE,6FACA,wBACE6B,QAAS,WACPT,EAAS,CAAEU,KAAM,kBAFrB,6BAQA","file":"static/js/4.7f097e32.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Cart(props) {\r\n  let state = useSelector((state) => state);\r\n  let dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <Table responsive>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>상품명</th>\r\n          <th>수량</th>\r\n          <th>변경</th>\r\n        </tr>\r\n        {state.reducer.map((item, i) => {\r\n          return (\r\n            <tr>\r\n              <td>{+i + 1}</td>\r\n              <td>{item.id}</td>\r\n              <td>{item.name}</td>\r\n              <td>{item.quan}</td>\r\n              <td>\r\n                <button\r\n                  onClick={() => {\r\n                    dispatch({ type: \"수량증가\", payload: { id: item.id } });\r\n                  }}\r\n                >\r\n                  +\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    dispatch({ type: \"수량감소\", payload: { id: item.id } });\r\n                  }}\r\n                >\r\n                  -\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </Table>\r\n      {state.reducer2 ? (\r\n        <div className=\"my-alert2\">\r\n          <p>지금 구매하시면 20% 할인</p>\r\n          <button\r\n            onClick={() => {\r\n              dispatch({ type: \"닫기\" });\r\n            }}\r\n          >\r\n            닫기\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\n//옛날 redux 방식\r\n// redux store 데이터를 가져와서 props로 변환해주는 함수. state==store에 있던 모든 데이터\r\n// function state를props화(state) {\r\n//   return {\r\n//     // redux store에 있던 객체를 state이란 이름으로 쓰겠다. state이란 이름을 props안에 넣어라\r\n//     state: state.reducer,\r\n//     alert열렸니: state.reducer2, //리듀서2에 있는거 가져오는법\r\n//   };\r\n// }\r\n\r\n// export default connect(state를props화)(Cart);\r\nexport default Cart;\r\n"],"sourceRoot":""}