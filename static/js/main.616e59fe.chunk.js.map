{"version":3,"sources":["data/data.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Cart","lazy","Detail","재고context","React","createContext","App","useState","Data","shoes","shoes변경","재고","재고변경","Card","props","className","to","i","src","width","alt","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","NavDropdown","Item","Divider","exact","path","Provider","value","map","item","onClick","axios","get","then","result","console","log","data","newShoes","catch","alert","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","기본state","name","quan","store","createStore","combineReducers","reducer","state","액션","type","copy","alrdyExistItemInCart","find","x","payload","push","reducer2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,MAAO,kBACPC,QAAS,iBACTC,MAAO,MAGT,CACEH,GAAI,EACJC,MAAO,WACPC,QAAS,gBACTC,MAAO,MAGT,CACEH,GAAI,EACJC,MAAO,cACPC,QAAS,qBACTC,MAAO,Q,uCCZPC,EAAOC,gBAAK,WACd,OAAO,iCAGLC,EAASD,gBAAK,WAChB,OAAO,iCAGEE,EAAYC,IAAMC,gBAuHdC,MArHf,WAAgB,IAAD,EACUC,mBAASC,GADnB,mBACRC,EADQ,KACDC,EADC,OAEIH,mBAAS,CAAC,GAAI,GAAI,KAFtB,mBAERI,EAFQ,KAEJC,EAFI,KAITC,EAAO,SAACC,GACV,OACE,sBAAKC,UAAU,WAAf,UACE,cAAC,IAAD,CAAMC,GAAE,kBAAaF,EAAMG,GAA3B,SACE,qBACEC,IAAG,mDAA8CJ,EAAMG,EAAI,EAAxD,QACHE,MAAM,OACNC,IAAI,OAGR,6BAAKN,EAAML,MAAMZ,QACjB,8BACGiB,EAAML,MAAMX,QADf,MAC2BgB,EAAML,MAAMV,aAK7C,OACE,sBAAKgB,UAAU,MAAf,UACE,sBAAKA,UAAU,kCAAf,UACE,oBAAIA,UAAU,oBAAd,kBACA,mBAAGA,UAAU,qBAEf,cAACM,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,kBACA,cAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,cAACP,EAAA,EAAOQ,SAAR,CAAiBjC,GAAG,mBAApB,SACE,eAACkC,EAAA,EAAD,CAAKf,UAAU,UAAf,UACE,cAACe,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAMf,GAAG,IAAvB,kBAGA,eAACiB,EAAA,EAAD,CAAapC,MAAM,WAAWD,GAAG,qBAAjC,UACE,cAACqC,EAAA,EAAYC,KAAb,CAAkBR,KAAK,cAAvB,oBACA,cAACO,EAAA,EAAYC,KAAb,CAAkBR,KAAK,cAAvB,4BAGA,cAACO,EAAA,EAAYC,KAAb,CAAkBR,KAAK,cAAvB,uBAGA,cAACO,EAAA,EAAYE,QAAb,IACA,cAACF,EAAA,EAAYC,KAAb,CAAkBR,KAAK,cAAvB,yCASV,eAAC,IAAD,WACE,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAlB,SACE,sBAAKtB,UAAU,YAAf,UAEE,cAACZ,EAAUmC,SAAX,CAAoBC,MAAO5B,EAA3B,SACE,qBAAKI,UAAU,MAAf,SACGN,EAAM+B,KAAI,SAACC,EAAMxB,GAChB,OAAO,cAACJ,EAAD,CAAMJ,MAAOgC,EAAMxB,EAAGA,GAAQA,UAqB3C,wBACEF,UAAU,kBACV2B,QAAS,WACPC,IACGC,IAAI,kDACJC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAOG,MACnB,IAAIC,EAAQ,sBAAOzC,GAAP,YAAiBqC,EAAOG,OAEpCvC,EAAQwC,MAETC,OAAM,WACLC,MAAM,sEAZd,qCAoBJ,cAAC,IAAD,CAAOf,KAAK,cAAZ,SACE,cAAC,WAAD,CAAUgB,SAAU,6CAApB,SACE,cAACnD,EAAD,CAAQO,MAAOA,EAAOE,eAAIA,EAAIC,2BAAMA,QAGxC,cAAC,IAAD,CAAOyB,KAAK,QAAZ,SACE,cAAC,WAAD,CAAUgB,SAAU,6CAApB,SACE,cAACrD,EAAD,eClHGsD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCWVO,EAAU,CAAC,CAAElE,GAAI,GAAImE,KAAM,2BAAQC,KAAM,IAyBzCC,EAAQC,YAAYC,YAAgB,CAAEC,QAtB5B,WAA0B,IAAzBC,EAAwB,uDAAhBP,EAASQ,EAAO,uCACrC,GAAgB,6BAAZA,EAAGC,KAAiB,CACtB,IAAIC,EAAI,YAAOH,GACXI,EAAuBD,EAAKE,MAAK,SAACC,GAAD,OAAOA,EAAE/E,IAAM0E,EAAGM,QAAQhF,MAM/D,OALI6E,EACFA,EAAqBT,OAErBQ,EAAKK,KAAKP,EAAGM,SAERJ,EACF,GAAgB,6BAAZF,EAAGC,KAAiB,CAC7B,IAAIC,EAAI,YAAOH,GAEf,OADAG,EAAKE,MAAK,SAACC,GAAD,OAAOA,EAAE/E,IAAM0E,EAAGM,QAAQhF,MAAIoE,OACjCQ,EACF,GAAgB,6BAAZF,EAAGC,KAAiB,CAC7B,IAAIC,EAAI,YAAOH,GAEf,OADAG,EAAKE,MAAK,SAACC,GAAD,OAAOA,EAAE/E,IAAM0E,EAAGM,QAAQhF,MAAIoE,OACjCQ,EAEP,OAAOH,GAGwCS,SAhCpC,WAA2B,IAA1BT,IAAyB,yDAAPC,EAAO,uCAIvC,MAHe,gBAAXA,EAAGC,OACLF,GAAQ,GAEHA,MA8BTU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUhB,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINiB,SAASC,eAAe,SAM1B7B,M","file":"static/js/main.616e59fe.chunk.js","sourcesContent":["export default [\r\n  {\r\n    id: 0,\r\n    title: \"White and Black\",\r\n    content: \"Born in France\",\r\n    price: 120000,\r\n  },\r\n\r\n  {\r\n    id: 1,\r\n    title: \"Red Knit\",\r\n    content: \"Born in Seoul\",\r\n    price: 110000,\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    title: \"Grey Yordan\",\r\n    content: \"Born in the States\",\r\n    price: 130000,\r\n  },\r\n];\r\n","import React, { useState, useContext, lazy, Suspense } from \"react\";\nimport { Nav, Navbar, Container, NavDropdown, Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Data from \"./data/data.js\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\n//import Cart from \"./Cart.js\";\nlet Cart = lazy(() => {\n  return import(\"./Cart.js\");\n});\n//import Detail from \"./Detail.js\";\nlet Detail = lazy(() => {\n  return import(\"./Detail.js\");\n});\n//같은값을 공유하는 범위\nexport let 재고context = React.createContext();\n\nfunction App() {\n  let [shoes, shoes변경] = useState(Data);\n  let [재고, 재고변경] = useState([10, 11, 12]);\n\n  let Card = (props) => {\n    return (\n      <div className=\"col-md-4\">\n        <Link to={`/detail/${props.i}`}>\n          <img\n            src={`https://codingapple1.github.io/shop/shoes${props.i + 1}.jpg`}\n            width=\"100%\"\n            alt=\"\"\n          />\n        </Link>\n        <h4>{props.shoes.title}</h4>\n        <p>\n          {props.shoes.content} & {props.shoes.price}\n        </p>\n      </div>\n    );\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid py-5 background\">\n        <h1 className=\"display-5 fw-bold\">Shop</h1>\n        <p className=\"col-md-8 fs-4\"></p>\n      </div>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">Shop</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/\">\n                Home\n              </Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">\n                  Another action\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">\n                  Something\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"container\">\n            {/* value 부분엔 공유하고 싶은 값 */}\n            <재고context.Provider value={재고}>\n              <div className=\"row\">\n                {shoes.map((item, i) => {\n                  return <Card shoes={item} i={i} key={i} />;\n                })}\n\n                {/* {shoes.map((item, i) => {\n                return (\n                  <div className=\"col-md-4\">\n                    <img\n                      src={`https://codingapple1.github.io/shop/shoes${\n                        i + 1\n                      }.jpg`}\n                      width=\"100%\"\n                    />\n                    <h4>{item.title}</h4>\n                    <p>\n                      {item.content} & {item.price}\n                    </p>\n                  </div>\n                );\n              })} */}\n              </div>\n            </재고context.Provider>\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                axios\n                  .get(\"https://codingapple1.github.io/shop/data2.json\")\n                  .then((result) => {\n                    console.log(result.data);\n                    var newShoes = [...shoes, ...result.data];\n\n                    shoes변경(newShoes);\n                  })\n                  .catch(() => {\n                    alert(\"서버에 문제가 있습니다\");\n                  });\n              }}\n            >\n              더보기\n            </button>\n          </div>\n        </Route>\n        <Route path=\"/detail/:id\">\n          <Suspense fallback={<div>loading...</div>}>\n            <Detail shoes={shoes} 재고={재고} 재고변경={재고변경} />\n          </Suspense>\n        </Route>\n        <Route path=\"/cart\">\n          <Suspense fallback={<div>loading...</div>}>\n            <Cart />\n          </Suspense>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { combineReducers, createStore } from \"redux\";\n\nlet alert초기값 = true;\n\nlet reducer2 = (state = alert초기값, 액션) => {\n  if (액션.type == \"닫기\") {\n    state = false;\n  }\n  return state;\n};\n\nlet 기본state = [{ id: 99, name: \"멋진신발\", quan: 2 }];\n\n/** reducer는 항상 state을 퉤 뱉어야 됨 */\nlet reducer = (state = 기본state, 액션) => {\n  if (액션.type === \"항목추가\") {\n    let copy = [...state];\n    let alrdyExistItemInCart = copy.find((x) => x.id == 액션.payload.id);\n    if (alrdyExistItemInCart) {\n      alrdyExistItemInCart.quan++;\n    } else {\n      copy.push(액션.payload);\n    }\n    return copy;\n  } else if (액션.type === \"수량증가\") {\n    let copy = [...state];\n    copy.find((x) => x.id == 액션.payload.id).quan++;\n    return copy;\n  } else if (액션.type === \"수량감소\") {\n    let copy = [...state];\n    copy.find((x) => x.id == 액션.payload.id).quan--;\n    return copy;\n  } else {\n    return state;\n  }\n};\nlet store = createStore(combineReducers({ reducer, reducer2 }));\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}